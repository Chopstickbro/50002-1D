//access test_Cases and outputs test cases at clk period. 
//Complete = 1 when all permutaions of a and b are complete.

module test_generator (
    input clk,  // clock
    input rst,  // reset
    output a_out[8],
    output b_out[8],
    output rotation[4]
  ) {
  
  test_cases test_cases_a;
  test_cases test_cases_b;
  
  .clk(clk) {
    .rst(rst) {
      counter counter_a (#SIZE(7), #DIV(25)); // extra bit to know when it overflows
      counter counter_b (#SIZE(7), #DIV(28)); 
    }
  }

  always {
    test_cases_a.address = counter_a.value[2:0];
    test_cases_b.address = counter_b.value[2:0];
    a_out = test_cases_a.out;
    b_out = test_cases_b.out;
    rotation = counter_b.value[6:3];
  }
}
